[gd_scene load_steps=5 format=2]

[ext_resource path="res://scenes/generate/task_control/TaskControl.tscn" type="PackedScene" id=1]
[ext_resource path="res://scenes/generate/Generate.gd" type="Script" id=2]

[sub_resource type="Shader" id=1]
code = "//https://godotshaders.com/shader/hsv-adjustment/
shader_type canvas_item;

vec3 rgb2hsv(vec3 c) {
    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));

    float d = q.x - min(q.w, q.y);
    float e = 1.0e-10;
    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
}

vec3 hsv2rgb(vec3 c) {
    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
}

void fragment(){
  float value = FRAGCOORD.x * sin(TIME);
  vec3 hsv_col = rgb2hsv(COLOR.rgb);
  hsv_col.z *= value; 
  COLOR.rgb = hsv2rgb(hsv_col);
  COLOR = vec4(1.0,1.0,1.0,1.0);
 }"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )

[node name="Generate" type="ScrollContainer"]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 4.0
margin_top = 32.0
margin_right = -4.0
margin_bottom = -4.0
size_flags_horizontal = 3
size_flags_vertical = 3
script = ExtResource( 2 )
task_control_packed_scene = ExtResource( 1 )

[node name="TasksContainer" type="VBoxContainer" parent="."]
margin_right = 1140.0
margin_bottom = 564.0
size_flags_horizontal = 3
size_flags_vertical = 3

[node name="TaskControl" parent="TasksContainer" instance=ExtResource( 1 )]
material = SubResource( 2 )
margin_right = 1021.0
margin_bottom = 52.0
